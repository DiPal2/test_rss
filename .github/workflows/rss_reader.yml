name: "rss_reader"

on: [push]

jobs:
  code:
    name: "Python ${{ matrix.python-version }} on ${{ matrix.os}}"

    runs-on: "${{ matrix.os }}"

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - "3.9"
      fail-fast: false

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache virtual environment
        id: cache
        uses: actions/cache@v2
        with:
          path: venv
          key: "venv-${{ matrix.os }}-${{ matrix.python-version }}-${{ hashFiles('requirements*.txt') }}"

      - name: Create virtual environment (*nix)
        if: |
          (startsWith(runner.os, 'Linux') || startsWith(runner.os, 'macOS'))
          && steps.cache.outputs.cache-hit != 'true'
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements_dev.txt

      - name: Create virtual environment (Windows) # cache is not working
        if: |
          startsWith(runner.os, 'Windows')
        run: |
          python -m venv venv
          venv\Scripts\activate.ps1
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements_dev.txt

      - name: Check styles in Linux
        if: ${{ startsWith(runner.os, 'Linux') }}
        run: |
          source venv/bin/activate
          black --check --diff .
          pylint rss_reader

      - name: Test with pytest (*nix)
        if: ${{ startsWith(runner.os, 'Linux') || startsWith(runner.os, 'macOS') }}
        run: |
          source venv/bin/activate
          pytest -vv --junitxml=junit/test-results-${{ matrix.os }}-${{ matrix.python-version }}.xml --cov-report xml:coverage/coverage-results-${{ matrix.os }}-${{ matrix.python-version }}.xml

      - name: Test with pytest (Windows)
        if: ${{ startsWith(runner.os, 'Windows') }}
        run: |
          venv\Scripts\activate.ps1
          pytest -vv --junitxml=junit\test-results-${{ matrix.os }}-${{ matrix.python-version }}.xml --cov-report xml:coverage\coverage-results-${{ matrix.os }}-${{ matrix.python-version }}.xml

      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results-${{ matrix.os }}-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.os }}-${{ matrix.python-version }}.xml
        if: ${{ always() }}

      - name: Upload coverage results
        uses: actions/upload-artifact@v3
        with:
          name: coverage-results-${{ matrix.os }}-${{ matrix.python-version }}
          path: coverage/coverage-results-${{ matrix.os }}-${{ matrix.python-version }}.xml
        if: ${{ always() }}

      - name: Upload Linux coverage to Codecov
        if: ${{ startsWith(runner.os, 'Linux') }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage/coverage-results-${{ matrix.os }}-${{ matrix.python-version }}.xml